import { ComponentType, ReactElement, ReactNode } from 'react';
import flattenChildren from 'react-keyed-flatten-children';

import {
  isChildSubcomponent,
  isSubcomponentNestedInSmartClone,
} from '../utils/subcomponentHelpers';

export function useGetSubcomponentChild<TProps>(
  children: ReactNode,
  subcomponent: ComponentType<TProps> | Array<ComponentType<TProps>>,
) {
  return flattenChildren(children).find(child => {
    if (Array.isArray(subcomponent)) {
      return subcomponent.some(
        sub =>
          isChildSubcomponent(child, sub) ||
          isSubcomponentNestedInSmartClone(child, sub),
      );
    }
    return (
      isChildSubcomponent(child, subcomponent) ||
      isSubcomponentNestedInSmartClone(child, subcomponent)
    );
  }) as undefined | ReactElement<TProps>;
}
